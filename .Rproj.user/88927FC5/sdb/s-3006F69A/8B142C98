{
    "contents" : "############## Recapture model\n#   for(i in 1:nEvalRows){\n#     logit( p[ evalRows[i]+1 ] ) <- pBeta[ season[ evalRows[i]+1 ],year[ evalRows[i]+1 ],zRiv[ evalRows[ i ]+1 ] ]                                    \n#   }\n\n############## Recapture priors\n\n#   for( s in 1:4 ){    \n#     for(y in 1:nYears){  \n#       for( r in 1:(nRivers+1) ){\n#         \n#         pBeta[ s,y,r ] ~ dnorm( 0,0.667 )\n#         \n#       }\n#     }\n#   }\n\n############## Survival model\n#   for(i in 1:nEvalRows){\n#     logit( phi[ evalRows[i] ] ) <- phiBeta[ season[ evalRows[i] ],year[ evalRows[i] ],zRiv[ evalRows[ i ] ] ]\n#     \n#   }\n#   \n\n############## survival priors\n#   for( s in 1:4 ){    \n#     for(y in 1:nYears){  \n#       for( r in 1:(nRivers+1) ){  \n#         \n#         phiBeta[ s,y,r ] ~ dnorm( 0,0.667 )\n#         \n#       }\n#     }\n#   }\n#   \n############## Psi model\n#   for( i in 1:nEvalRows ){\n#     sumPsi[evalRows[i]]<-sum(ePsi[evalRows[i],])\n#     \n#     for( r2 in 1:nRivers ){\n#       # normal priors on logit\n#       lpsi[evalRows[i],r2] <- psiBeta[season[evalRows[i]],riverDATA[evalRows[i]],r2]     \n#       \n#       ePsi[evalRows[i],r2]<-exp(lpsi[evalRows[i],r2])*(1-(riverDATA[evalRows[i]]==r2))\n#       \n#       #Constrain each set of psi's to sum to one\n#       psi[evalRows[i],r2]<-( ePsi[evalRows[i],r2] / (1+sumPsi[evalRows[i]]) ) * ( 1-(riverDATA[evalRows[i]]==r2) )\n#       + ( 1 / (1+sumPsi[evalRows[i]]) )  *    (riverDATA[evalRows[i]]==r2)\n#     }\n#   }\n############## Psi Priors\n#   for( s in 1:4 ) {\n#     for(r in 1:(nRivers)){\n#       for(r2 in 1:(nRivers)){\n#         \n#         psiBeta[s,r,r2]~dnorm(0,1/2.25)\n#         #psiSizeBetas[r,r2]~dnorm(0,1/2.25)\n#         \n#       }\n#     }\n#   }\n\n############## Likelihood\n# Initial conditions:\n# 1) individuals enter the sample with probability 1\n# 2) individuals enter the sample alive, with probability 1\n#   for(i in 1:nFirstObsRows){\n#     z[ firstObsRows[i] ] <- 1\n#     #zRiv[ firstObsRows[i] ] <- riverDATA[ firstObsRows[i] ] + 1\n#   }\n\n#  for(i in 1:nEvalRows){\n#     # State of survival\n#     encDATA[ evalRows[i]+1 ] ~ dbern( survProb[ evalRows[i] ] ) #Do or don't suvive to i\n#     survProb[evalRows[i]] <-         phi[ evalRows[i] ] #^ ( intervalDays[ evalRows[i] ] * 4 / 365 ) \n#     * z[ evalRows[i] ] \n#     \n#     # State of location\n#     #riverDATA[ evalRows[i]+1 ] ~ dcat( psi[ evalRows[i], ] )\n#     \n#     #zRiv[evalRows[i]+1] <- riverDATA[ evalRows[i]+1 ]  \n#     #* z[ evalRows[i]+1 ]  \n#     #+ 1\n\n# Observation of live encounters\n#     encDATA[ evalRows[i]+1 ] ~ dbern( obsProb[ evalRows[i]+1 ] )\n\n#     obsProb[ evalRows[i]+1 ]<-        p[ evalRows[i]+1 ]                 # Capture probability (calculated above).\n#     * z[ evalRows[i]+1 ]                 # Must be alive to be capturable.      \n#     #* availableDATA[ evalRows[i]+1 ]                 # Must be on the study site to be capturable.\n#  }",
    "created" : 1428521847978.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "3370347016",
    "id" : "8B142C98",
    "lastKnownWriteTime" : 1427918819,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}